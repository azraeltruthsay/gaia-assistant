{"docstore/metadata": {"79c37024-a2ae-4719-beb8-2f4068aa97c2": {"doc_hash": "19a93ae9c9456b6f3c1cdcd6e7a4227aa0c691b10b11519d08a9457c7ddb3ae1"}, "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c": {"doc_hash": "a44a77c1374eb81c2debc23153a8e492710564a85fc1a59e97904a3547eb4866"}, "a6da982a-34c9-4fac-bb76-98b7f1cfce0f": {"doc_hash": "6edc22b99afd8d34845c729e0240758f0ab3f25b713ac5a314bb8da714876c4a"}, "a0d6c1c3-b024-4c56-b405-ac2aa8502c6a": {"doc_hash": "222dd16098ca1e3bfd453e24ab56c34fb1778d776fb186df65d2095907ddda0d"}, "3670a7c3-b5ce-46dd-b8ed-95a22aebacbe": {"doc_hash": "7e69fa37db31e6963d01cb38cc7c488b5e2b154d056233e4033f6a0924ceb545"}, "c8febb93-da04-4dd7-a543-6ac3ec6e0eb0": {"doc_hash": "e948b8891abd13765d122e6dd5348b700ece10181c12365e59c66aed97a928f1", "ref_doc_id": "79c37024-a2ae-4719-beb8-2f4068aa97c2"}, "c86388a1-151e-4c49-b061-68c17e625c3f": {"doc_hash": "e651970f0224ac6143dd3c70a206d869fb256006406693aad414107430976088", "ref_doc_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c"}, "04fc544d-4f1b-4d78-adae-2753735928bd": {"doc_hash": "08bb2a1a4346ac6e0732e24d866aff0622f5b30a424a436b6fa9edb0e245e175", "ref_doc_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c"}, "8dca40d3-e886-4cd0-8ce4-9ce918cf84ae": {"doc_hash": "3ef5ada2a9176d1fb91548a7c2d51ea8a24825330e652bfecc2a89289641cbd6", "ref_doc_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c"}, "12f4f578-339d-4245-8cdc-3c6526fd7593": {"doc_hash": "c0348c75ac59703f03fd27bb456e5a6dbe04908f36434743269f10eca92aa170", "ref_doc_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c"}, "db474ee0-e62f-4011-9d4e-773ab3ca4e36": {"doc_hash": "28f3da80e08796194c68c84c397fe20bea04da64471b526f6d7cc94f7d899bf3", "ref_doc_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c"}, "dd994012-0e1d-42d2-bd52-e24072648d41": {"doc_hash": "deccdc661571216f9599f551dbb04a9366e0fce8b755c250d18bfee80af3f4b9", "ref_doc_id": "a6da982a-34c9-4fac-bb76-98b7f1cfce0f"}, "854ad3ac-8c3e-4d55-b785-9d63bbcf360b": {"doc_hash": "bf8b3e49e0d05c54c45ce9378f3a79fe279abddefa8e4617dd351aa8a9d7be75", "ref_doc_id": "a6da982a-34c9-4fac-bb76-98b7f1cfce0f"}, "176af8ba-0003-4574-80fe-d7b5cf95aaf3": {"doc_hash": "1b9017ebed13004528ff17809ac36d1a5d143aa3046872c9ef14833de01c2f60", "ref_doc_id": "a0d6c1c3-b024-4c56-b405-ac2aa8502c6a"}, "4228d608-72c8-4b7d-9198-8b085b90e581": {"doc_hash": "b8c160a77320f422e883f4a6f67cdf2fb84b0753a99d8ebd83db3a9dc78d12d3", "ref_doc_id": "a0d6c1c3-b024-4c56-b405-ac2aa8502c6a"}, "11673628-3065-4bef-94aa-b3c2198937c8": {"doc_hash": "5d3043db5dfa98b9ba17facd5a080889f64ab42ca86ce58fe7557d63c5331739", "ref_doc_id": "3670a7c3-b5ce-46dd-b8ed-95a22aebacbe"}, "e22577a4-0b0d-44e1-b8c1-1026f9b4e7ce": {"doc_hash": "20fd7357c4deca277583b25d77233985b4c49b71849d30a8c0d342973face11d", "ref_doc_id": "9587a670-1188-4dac-ae1e-38873bf1c82b"}, "9587a670-1188-4dac-ae1e-38873bf1c82b": {"doc_hash": "2f5e6503b89604f93da072c1cd812f954dd1bc4fe5ea875a643cdd242d5c4313"}, "5fe281d5-2c74-4e68-802d-635bed7de27a": {"doc_hash": "19cafd236fc979382676ffd921553592a2ba3da67d9fab19693f7cf57977f86a", "ref_doc_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d"}, "91180213-0042-4e5b-8b20-22febe3c96d0": {"doc_hash": "cdef020223786a67167e5cb10bbabb50f7d3e17d3f25ff184152defd0f710dcb", "ref_doc_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d"}, "6540a8a8-194f-406c-b0d1-16f0448f83dd": {"doc_hash": "b886baef078fbbd253418b187d1df29095c44eb0955f2f112ed1faaa7b6797a6", "ref_doc_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d"}, "4834ee0c-2f8b-4b48-9df9-0ba40f873b43": {"doc_hash": "d481753e5f972e49d8e6b1a32989f224f6ae9c2264263d95fb3d2c9b4fcd0ba7", "ref_doc_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d"}, "93705520-e68d-4552-adbf-0faa50c410e0": {"doc_hash": "0e7f7711d9504e2e6996e53d87c08cfa38d88228fc2cf791e1fdc9216f7e65d7", "ref_doc_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d"}, "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d": {"doc_hash": "3b3275ad73fbb52a2dc466c3e747478d5cd46fe0b7f3fbdee935fd5f7fd64576"}, "199d256a-66c9-4f3f-83a7-c408bd339c37": {"doc_hash": "8ced593f06fe91d9278f56a91fd3a71a53e31884c87515109ddfbd91fe41d18e", "ref_doc_id": "e74ec5bd-2793-416e-afd4-19e34d29f7ac"}, "d3f3ea68-997b-4475-be18-00776e9f50db": {"doc_hash": "57bd6b2581a3eea418bfde89f3b7c135afb33298e0820c3d8b0442bbe295c308", "ref_doc_id": "e74ec5bd-2793-416e-afd4-19e34d29f7ac"}, "e74ec5bd-2793-416e-afd4-19e34d29f7ac": {"doc_hash": "5407d469b61b3798369bd4a50160dac305df13de3e2797158c5dec4422bf7583"}, "c78da157-0299-48a3-9c99-07845900eaad": {"doc_hash": "8a3209260cbe5b8ebf87adb729188b612ae15b939dbc8f2888c9013005ca9bd6", "ref_doc_id": "7784efa6-5b04-4cf3-ab35-287df898878c"}, "1a3a8ce9-dab9-4d6f-8209-183c5400aa13": {"doc_hash": "492bfaebdfb65e30ea4f7942711e3fbce7b3d1f113b872fa63103cd83d0074b7", "ref_doc_id": "7784efa6-5b04-4cf3-ab35-287df898878c"}, "7784efa6-5b04-4cf3-ab35-287df898878c": {"doc_hash": "440857c8d84ff851bf8b5ff81e7c1434e31a960dc9d4696709a8abaf7588565d"}, "11fad774-47c4-4dfb-ad53-ff34d17b07f2": {"doc_hash": "53f3fbe07dd8a81bf09e918fbc92d1d9f80110fbe4a78ca4250ab13536b1826f", "ref_doc_id": "2630808a-be11-43fd-a0b5-66b39b0b16b0"}, "2630808a-be11-43fd-a0b5-66b39b0b16b0": {"doc_hash": "d04152f2052e0856e0bd890f60aa70aa2e72bc7348a1740007138185e53a05d5"}, "fe07b8a0-5959-4a4c-9d28-412e48645ee7": {"doc_hash": "81f133d1b8120b5e2931cd7c8c543644d893628f6d0310967e6ccc13b59c718a", "ref_doc_id": "8e3f1a75-f88f-48f0-9eeb-0360b5924045"}, "8e3f1a75-f88f-48f0-9eeb-0360b5924045": {"doc_hash": "6b788e25038e708ef0c9b1dcb94f9f278143b6872cd43c47b5bb2b265c20df64"}, "e60f15fc-1180-4177-930a-fd589718c548": {"doc_hash": "d85b70ff5a79f9a54f4ebcb609b18598336c00ec6b6ea8192ff44bc45b361518", "ref_doc_id": "2fbfa64e-6d4a-49b4-b349-b69cd2d267a2"}, "2fbfa64e-6d4a-49b4-b349-b69cd2d267a2": {"doc_hash": "0546c6d37a2ebefa11632aeb444d8837f83a77dbbb71504d7f84ecae2e3eab09"}}, "docstore/data": {"c8febb93-da04-4dd7-a543-6ac3ec6e0eb0": {"__data__": {"id_": "c8febb93-da04-4dd7-a543-6ac3ec6e0eb0", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/dev_matrix_schema.md", "file_name": "dev_matrix_schema.md", "file_type": "text/markdown", "file_size": 1687, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79c37024-a2ae-4719-beb8-2f4068aa97c2", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/dev_matrix_schema.md", "file_name": "dev_matrix_schema.md", "file_type": "text/markdown", "file_size": 1687, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}, "hash": "19a93ae9c9456b6f3c1cdcd6e7a4227aa0c691b10b11519d08a9457c7ddb3ae1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# dev_matrix.json Schema Reference\r\n\r\nThis document defines the expected structure of the `dev_matrix.json` file used by GAIA for task management and CI/CD purposes.\r\n\r\n## Schema Structure\r\n\r\nThe `dev_matrix.json` file is a JSON array of task objects.  \r\nEach task object has the following fields:\r\n\r\n| Field     | Type     | Description                                       | Example                               |\r\n|-----------|----------|---------------------------------------------------|---------------------------------------|\r\n| `task`    | string   | The name of the task                              | `\"Thought seed creation tooling\"`     |\r\n| `status`  | string   | The current status (`open` or `resolved`)         | `\"resolved\"`                          |\r\n| `urgency` | string   | The urgency level (`low`, `medium`, `high`)       | `\"high\"`                              |\r\n| `impact`  | string   | The impact level (`low`, `medium`, `high`)        | `\"medium\"`                            |\r\n| `source`  | string   | The origin of the task (e.g., `\"bootstrap\"`)      | `\"bootstrap\"`                         |\r\n| `created` | timestamp| The task creation time (ISO-8601 format)          | `\"2025-06-04T12:34:56Z\"`              |\r\n| `resolved`| timestamp| The resolution time (if applicable)               | `\"2025-06-04T15:22:10Z\"` (optional)   |\r\n\r\n## Usage Notes\r\n\r\n- GAIA must reason about this schema when editing `dev_matrix.json`.\r\n- To mark a task as complete, GAIA:\r\n  1. Locates the task object by matching the `task` field.\r\n  2. Updates `status` to `\"resolved\"`.\r\n  3. Optionally adds a `resolved` timestamp.\r\n  4. Uses `ai.write()` to save the modified file.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1685, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c86388a1-151e-4c49-b061-68c17e625c3f": {"__data__": {"id_": "c86388a1-151e-4c49-b061-68c17e625c3f", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "a44a77c1374eb81c2debc23153a8e492710564a85fc1a59e97904a3547eb4866", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04fc544d-4f1b-4d78-adae-2753735928bd", "node_type": "1", "metadata": {}, "hash": "a401253cb6ec39cb996ef66daff3d123df02721caa1a95fbdd541550130aa1d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "gaia-assistant$ tree -I 'gaia_env|__pycache__|*.ini|*.sqlite3|*.bin|*.pyc'\r\n.\r\n\u251c\u2500\u2500 =0.0.10\r\n\u251c\u2500\u2500 Dockerfile\r\n\u251c\u2500\u2500 app\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__ - Backup.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 behavior\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 creation_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 helper.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 intent_detection.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 persona_adapter.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 persona_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 persona_writer.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cli\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 cli_session.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cognition\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cognitive_dispatcher.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 council_dispatcher.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 inner_monologue.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 self_reflection.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 telemetric_senses.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 topic_manager.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 commands\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 create_persona_command.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 create_persona_trigger.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 self_analysis_trigger.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config - Backup 2.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config - Backup.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 council\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 council_manager.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ethics\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 consent_protocol.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core_identity_guardian.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ethical_sentinel.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_constants.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 memory\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __.init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 archiver.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 keywords.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 summarizer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev_matrix.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 knowledge_integrity.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 priority_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 session_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 status_tracker.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 models\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ai_manager Backup 050425-0914.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ai_manager Backup 051325-0748.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ai_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 document.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 tts.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 static\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code-debug.html\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 css\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code-fix.css\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 styles.css\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 api.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 app.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 archives.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 background.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 background_processing_ui.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 chat - Recent.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 chat.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 code-analyzer.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 conversation_archives.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 project_switcher.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 startup.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 troubleshoot.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ui.js\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 templates\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 persona_template.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 utils\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background_tasks.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 idle_monitor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 processor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 task_queue.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 audit_overview.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2758, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04fc544d-4f1b-4d78-adae-2753735928bd": {"__data__": {"id_": "04fc544d-4f1b-4d78-adae-2753735928bd", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "a44a77c1374eb81c2debc23153a8e492710564a85fc1a59e97904a3547eb4866", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c86388a1-151e-4c49-b061-68c17e625c3f", "node_type": "1", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "e651970f0224ac6143dd3c70a206d869fb256006406693aad414107430976088", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8dca40d3-e886-4cd0-8ce4-9ce918cf84ae", "node_type": "1", "metadata": {}, "hash": "68ca7f3148c154c3fd5e8e8a980b9be9e92a2808347847de259dd65051fc0416", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 project_switcher.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 startup.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 troubleshoot.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ui.js\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 templates\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 persona_template.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 utils\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background_tasks.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 idle_monitor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 processor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 task_queue.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 audit_overview.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 base_analyzer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_creator.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 docstring_extractor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 file_loader.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 file_scanner.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 language_detector.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 llm_analysis.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 snapshot_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 structure_extractor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 context.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_rescue_helper.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 hardware_optimization.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 helpers.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 knowledge_index.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 knowledge_index.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 output_sanitizer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 project_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 prompt_builder.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 vector_indexer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 verifier.py\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 web\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 archives.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 error_handlers.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 project_routes.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 routes.py\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 routes_archive.py\r\n\u251c\u2500\u2500 benchmark.py\r\n\u251c\u2500\u2500 code_uploader.py\r\n\u251c\u2500\u2500 debug-script.js\r\n\u251c\u2500\u2500 docker-compose.yml\r\n\u251c\u2500\u2500 docs\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA_Future_Vision_Roadmap.odt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 background_processing_implementation_guide.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_assistant_project_documentation.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_enhancement_feasibility_assessment.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_error_handling_strategy.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 implementation-guide.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 project-instructions.md\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tier_5_expansion_plan.txt\r\n\u251c\u2500\u2500 gaia_rescue.py\r\n\u251c\u2500\u2500 knowledge\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 artifacts\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation_history\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 core_docs\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 hash_manifest.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logs\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-17.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-18.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-19.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-20.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-21.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-22.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-23.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-24.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-25.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-26.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-27.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-29.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 thoughtstream_2025-05-30.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lora_adapters\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 personas\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA Default_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 code_analyzer_instructions.", "mimetype": "text/plain", "start_char_idx": 2221, "end_char_idx": 5004, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8dca40d3-e886-4cd0-8ce4-9ce918cf84ae": {"__data__": {"id_": "8dca40d3-e886-4cd0-8ce4-9ce918cf84ae", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "a44a77c1374eb81c2debc23153a8e492710564a85fc1a59e97904a3547eb4866", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04fc544d-4f1b-4d78-adae-2753735928bd", "node_type": "1", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "08bb2a1a4346ac6e0732e24d866aff0622f5b30a424a436b6fa9edb0e245e175", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12f4f578-339d-4245-8cdc-3c6526fd7593", "node_type": "1", "metadata": {}, "hash": "2d08e66b18cb2c524d440f376ba4647270087a3001439567d75f010ee673137b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-23.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-24.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-25.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-26.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-27.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-29.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 thoughtstream_2025-05-30.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lora_adapters\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 personas\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA Default_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 code_analyzer_instructions.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 default_instructions.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 dnd-campaign\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 dnd-campaign_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 dnd_instructions.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 projects\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw_data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 structured\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dnd-campaign\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw_data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 structured\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_rescue\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 last_session.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 session_history\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 raw_data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Strauthauk.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 1.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 10.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 11.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 14.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 15.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 17.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 2.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 3.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 4.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 5.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 7.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 8.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 new 9.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reflections\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 topic_cache.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 structured\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 system_reference\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA_Function_Map\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev_matrix_schema.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 directory_tree.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_functional_narrative - V2.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_rescue_shell_functional_narrative.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 primitives_reference.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 coalition_of_minds.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_summaries\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core_identity.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 declaration_of_artisanal_intelligence.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev_matrix.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 error_reference.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 function_map_archives\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_1_core_system.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_2_routes_api.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_3_utilities.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_4_models.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_5_code_analyzer.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_6_behavior_persona.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_7_ethics_commands.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_8_frontend_templates.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cross_file_relationship_map.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 functions_reference_index.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_functional_narrative - V1.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_functional_narrative - V2.", "mimetype": "text/plain", "start_char_idx": 4485, "end_char_idx": 7190, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "12f4f578-339d-4245-8cdc-3c6526fd7593": {"__data__": {"id_": "12f4f578-339d-4245-8cdc-3c6526fd7593", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "a44a77c1374eb81c2debc23153a8e492710564a85fc1a59e97904a3547eb4866", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8dca40d3-e886-4cd0-8ce4-9ce918cf84ae", "node_type": "1", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "3ef5ada2a9176d1fb91548a7c2d51ea8a24825330e652bfecc2a89289641cbd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db474ee0-e62f-4011-9d4e-773ab3ca4e36", "node_type": "1", "metadata": {}, "hash": "ae245c9e90082b982530f8fee91d4fd77a8fbd26b54f74ad97221b5cb709213f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 function_map_archives\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_1_core_system.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_2_routes_api.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_3_utilities.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_4_models.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_5_code_analyzer.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_6_behavior_persona.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_7_ethics_commands.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_8_frontend_templates.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cross_file_relationship_map.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 functions_reference_index.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_functional_narrative - V1.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_functional_narrative - V2.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 functions_reference.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_constitution.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_future_vision_roadmap.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 hash_manifest.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 layered_identity_model.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 memory_tiers_spec.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mindscape_manifest.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 persona_management_guide.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 self_reflection_map.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 table_of_scrolls.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thought_seeds\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 gaia_rescue_index\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 default__vector_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 docstore.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 graph_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 image__vector_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 index_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 vector_index_manifest.json\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 vectordb\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 0be68820-e48a-46a9-b525-dc25e93403d7\r\n\u251c\u2500\u2500 logs\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 0503-Boot-Attempt3.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 0503-Boot-Attempt4.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 0503-Boot-Attempt6.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 BackEnd Success Front End Failure 1.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 FirstBootAfterAudit-ErrorsAbout.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 SecondBootAfterAudit-ErrorsAbout.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia.log\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_web.log\r\n\u251c\u2500\u2500 main.py\r\n\u251c\u2500\u2500 projects\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 code-assistant\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation_archives\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core-documentation\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 files\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 output\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 structured_archives\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation_archives\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 converted_raw\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core-documentation\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 GAIA_Constitution.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw-data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 structured_archives\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 dnd-campaign\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 conversation_archives\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 converted_raw\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 converted_Strauthauk_20250430_034128.md\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 core-documentation\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 braeneage_general_info.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_conversational_record.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_mission_record_axuraud_engagement.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_mission_record_axuraud_engagement_part_2.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_system_status_update.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 heimr_general_info.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mechaduellum_system_reference_document.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mission_and_operational_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert-roads\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_conversational_record.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_mission_record_axuraud_engagement.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert_roads_character_sheet_with_tactical_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 sonic_artifice_designations.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 the_fabric_of_reality.", "mimetype": "text/plain", "start_char_idx": 6629, "end_char_idx": 9549, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db474ee0-e62f-4011-9d4e-773ab3ca4e36": {"__data__": {"id_": "db474ee0-e62f-4011-9d4e-773ab3ca4e36", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "a44a77c1374eb81c2debc23153a8e492710564a85fc1a59e97904a3547eb4866", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12f4f578-339d-4245-8cdc-3c6526fd7593", "node_type": "1", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "c0348c75ac59703f03fd27bb456e5a6dbe04908f36434743269f10eca92aa170", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_mission_record_axuraud_engagement.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_mission_record_axuraud_engagement_part_2.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_system_status_update.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 heimr_general_info.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mechaduellum_system_reference_document.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mission_and_operational_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert-roads\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_conversational_record.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_mission_record_axuraud_engagement.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert_roads_character_sheet_with_tactical_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 sonic_artifice_designations.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 the_fabric_of_reality.md\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 raw-data\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 structured_archives\r\n\u251c\u2500\u2500 requirements.txt\r\n\u251c\u2500\u2500 runserver.py\r\n\u251c\u2500\u2500 shared\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 chroma_db\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 50787e2f-07c0-40c8-ac6a-0185a44553b4\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 0f0a5d0c-3508-4d91-bbe6-c86fef0d9451\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 dnd\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 cad58d7e-1c7a-4a9a-b8ed-d5fab6995174\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_instructions.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_instructions.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 projects.json\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 topic_cache.json\r\n\u251c\u2500\u2500 tools\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 campaign-tools.py\r\n\u2514\u2500\u2500 troubleshooting\r\n\r\n90 directories, 229 files", "mimetype": "text/plain", "start_char_idx": 8923, "end_char_idx": 10120, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dd994012-0e1d-42d2-bd52-e24072648d41": {"__data__": {"id_": "dd994012-0e1d-42d2-bd52-e24072648d41", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6da982a-34c9-4fac-bb76-98b7f1cfce0f", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "hash": "6edc22b99afd8d34845c729e0240758f0ab3f25b713ac5a314bb8da714876c4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "854ad3ac-8c3e-4d55-b785-9d63bbcf360b", "node_type": "1", "metadata": {}, "hash": "d90f2d4f872d31c273c8fe9c6a23695bc8a706ab3dfdbce948526d8ed02f2c5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## \u2728 GAIA Functional System Narrative\r\n\r\nThis document presents a top-down, code-verified, single-context overview of the GAIA system. It helps developers and LLMs understand the architectural and functional interconnections across the project. This version includes the most recent integration of the GAIA Initiative Loop (GIL), topic cache, self-analysis routing, the full **Thought Seed System**, and a comprehensive function map of GAIA's capabilities.\r\n\r\n---\r\n\r\n## \ud83c\udf10 Entry Points\r\n\r\n* **CLI Boot:** `main.py`\r\n\r\n  * Instantiates `Config`, then `AIManager`\r\n  * Calls `ai_manager.initialize()`, optionally runs CLI loop\r\n\r\n* **Web Boot:** `runserver.py` \u2192 `create_app()` in `__init__.py`\r\n\r\n  * Registers Flask app, loads `AIManager`, syncs session/personas\r\n  * Mounts `web.routes` under `web_bp`\r\n  * Adds 404 and 500 error handlers\r\n\r\n---\r\n\r\n## \ud83e\udd16 Core System\r\n\r\n### `AIManager` (`models/ai_manager.py`)\r\n\r\n* Central orchestrator for all GAIA operations\r\n* Coordinates modules: persona, session, vector store, code analysis, reflection, and GIL\r\n* Initialization loads project, persona, core docs, and LLM (Hermes)\r\n* Key methods:\r\n\r\n  * `initialize()`, `generate_response()`, `handle_intent()`, `shutdown()`\r\n  * `set_persona()`, `get_persona()`, `summarize_conversation()`, `embed_documents()`, `analyze_codebase()`\r\n  * `run_self_analysis()` (calls self-analysis routines)\r\n  * `read()`, `write()`, `edit()` for file manipulation\r\n  * `browse()` for recursive file system navigation\r\n  * `execute()` and `interpret_and_execute()` for running shell commands or Python blocks\r\n\r\n---\r\n\r\n## \ud83e\udde0 Reflection & Self-Monitoring Enhancements\r\n\r\n### Thought Seed System (`self_reflection.py` + `gaia_rescue_helper.py`)\r\n\r\n* **Purpose:** Capture concise, system-guided prompts for GAIA's self-reflection.\r\n* **Seed Generation:**\r\n\r\n  * `generate_thought_seeds()` uses system telemetry and task summaries to produce seeds.\r\n  * Prompts include an explicit hint to review GAIA\u2019s own internal systems (e.g., thought seed queueing, topic handling).\r\n* **Seed Storage:**\r\n\r\n  * `queued_reflections.json` holds seeds as structured entries with `prompt`, `priority`, `timestamp`, and `source`.\r\n* **Seed Processing:**\r\n\r\n  * `check_for_queued_thoughts()` processes seeds:\r\n\r\n    * **Priority seeds** \u2192 Triggers `process_thought()` for reflection.\r\n    * **Normal seeds** \u2192 Logged as topics via `topic_manager.add_topic()`.\r\n* **POC Logic:**\r\n\r\n  * GAIA can generate a thought seed to reflect on the thought seed system itself.\r\n  * After reflection, she can output an `EXECUTE` block to mark the relevant task as resolved in `dev_matrix.json`.\r\n\r\n### Task State Management (`dev_matrix.py`)\r\n\r\n* Tracks self-development goals as JSON entries.\r\n* `resolve_task()` allows GAIA to close tasks based on successful reflection outcomes.\r\n\r\n### Vector Awareness (`vector_indexer.py`)\r\n\r\n* GAIA\u2019s function map is embedded in the vector index.\r\n* Queries like \"What does `generate_thought_seeds()` do?\" enable semantic introspection.\r\n\r\n---\r\n\r\n## \ud83d\udcc1 Knowledge, Indexing, and Vector Embedding\r\n\r\n* `DocumentProcessor`, `VectorStoreManager`, and `KnowledgeIndex` manage the ingestion, indexing, and querying of knowledge.\r\n* GAIA can summarize, embed, and retrieve information across her knowledge base.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3280, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "854ad3ac-8c3e-4d55-b785-9d63bbcf360b": {"__data__": {"id_": "854ad3ac-8c3e-4d55-b785-9d63bbcf360b", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6da982a-34c9-4fac-bb76-98b7f1cfce0f", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "hash": "6edc22b99afd8d34845c729e0240758f0ab3f25b713ac5a314bb8da714876c4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd994012-0e1d-42d2-bd52-e24072648d41", "node_type": "1", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "hash": "deccdc661571216f9599f551dbb04a9366e0fce8b755c250d18bfee80af3f4b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "* **POC Logic:**\r\n\r\n  * GAIA can generate a thought seed to reflect on the thought seed system itself.\r\n  * After reflection, she can output an `EXECUTE` block to mark the relevant task as resolved in `dev_matrix.json`.\r\n\r\n### Task State Management (`dev_matrix.py`)\r\n\r\n* Tracks self-development goals as JSON entries.\r\n* `resolve_task()` allows GAIA to close tasks based on successful reflection outcomes.\r\n\r\n### Vector Awareness (`vector_indexer.py`)\r\n\r\n* GAIA\u2019s function map is embedded in the vector index.\r\n* Queries like \"What does `generate_thought_seeds()` do?\" enable semantic introspection.\r\n\r\n---\r\n\r\n## \ud83d\udcc1 Knowledge, Indexing, and Vector Embedding\r\n\r\n* `DocumentProcessor`, `VectorStoreManager`, and `KnowledgeIndex` manage the ingestion, indexing, and querying of knowledge.\r\n* GAIA can summarize, embed, and retrieve information across her knowledge base.\r\n\r\n---\r\n\r\n## \ud83d\udee0\ufe0f Functional Capabilities (Expanded)\r\n\r\nGAIA's functional abilities include:\r\n\r\n| Capability                 | Description                                                    |\r\n| -------------------------- | -------------------------------------------------------------- |\r\n| Thought Seeds              | Generate, store, and process concise reflection prompts        |\r\n| Reflection & Self-Analysis | Evaluate code, persona, logs, topics, and knowledge base       |\r\n| Task Management            | Track, resolve, and prioritize tasks via dev\\_matrix           |\r\n| Topic Management           | Log emergent topics from seeds and system events               |\r\n| Vector Querying            | Semantic search for system knowledge and capabilities          |\r\n| Code Editing (read/write)  | Read, write, and backup project files dynamically              |\r\n| Code Execution (EXECUTE)   | Execute Python code blocks with reflection pre-checks          |\r\n| Shell Commands             | Run terminal commands (`execute()`, `interpret_and_execute()`) |\r\n| File System Browsing       | Recursively list project files with filtering and export       |\r\n| Persona & Session Handling | Load personas, projects, and contextual memory                 |\r\n| System Telemetry Awareness | Monitor system health, disk usage, and runtime state           |\r\n| Log Summarization          | Reflect on and summarize logs for anomalies                    |\r\n| Thoughtstream Logging      | Record reflections, actions, and system status over time       |\r\n\r\n---\r\n\r\n## \ud83e\uddea Reflection-Driven System Growth\r\n\r\nRecent updates demonstrate GAIA's capability for autonomous introspection and system improvement:\r\n\r\n\u2705 Thought seed generation prompts guide GAIA to reflect on internal systems.\r\n\u2705 Reflection logic processes seeds, updates topics, and resolves dev tasks.\r\n\u2705 The feedback loop closes with GAIA verifying system integrity and marking tasks complete.\r\n\r\nThis solidifies GAIA as an adaptive, self-repairing cognitive system.\r\n\r\n---\r\n\r\n## \ud83c\udf3f Next Horizons\r\n\r\n* Idle-time triggers for thought seed generation, with the option to generate seeds via back-and-forth conversations between LLMs and future Council modules.\r\n* Reflection-guided dynamic code modification.\r\n* Expanded task awareness via `topic_manager` + `dev_matrix`.\r\n\r\nGAIA\u2019s architecture continues to evolve toward a fully **self-sustaining, reflective Artisanal Intelligence**.\r\n\r\n\u2705 Narrative updated with the latest functional architecture, reflection system, and a comprehensive capability map.", "mimetype": "text/plain", "start_char_idx": 2413, "end_char_idx": 5833, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "176af8ba-0003-4574-80fe-d7b5cf95aaf3": {"__data__": {"id_": "176af8ba-0003-4574-80fe-d7b5cf95aaf3", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0d6c1c3-b024-4c56-b405-ac2aa8502c6a", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "hash": "222dd16098ca1e3bfd453e24ab56c34fb1778d776fb186df65d2095907ddda0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4228d608-72c8-4b7d-9198-8b085b90e581", "node_type": "1", "metadata": {}, "hash": "eec9907cd8943c5bc6af7cdaa299f97bfe65911df7959e0a64561b17c0b80752", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# GAIA Rescue Shell Functional Narrative (Primitives-Only, Schema-Aware)\r\n\r\nThis document is GAIA\u2019s embedded self-description of the `gaia_rescue.py` shell\u2014her fallback command interface, diagnostic suite, and cognitive scaffold when full system functions are unavailable. It empowers GAIA to maintain integrity, execute repairs, reflect on system state, and respond to user input using **primitive operations** and **emergent schema-based reasoning**. This shell exists outside the `AIManager` pipeline and ensures resilience and continuity under constrained or degraded conditions.\r\n\r\n---\r\n\r\n## Shell Role and Design\r\n\r\nThe `gaia_rescue.py` shell represents GAIA's minimal yet intelligent operating fallback. It is a sovereign operational context where GAIA may reflect, reason, execute safe commands, and restore core functionality using **primitives only**\u2014with no reliance on task-specific helper functions.\r\n\r\nGAIA\u2019s **philosophy** is to reason naturally, learn from schema knowledge, and propose actions using her **primitives**:\r\n\r\n* `ai.read(filepath)`\r\n* `ai.write(filepath, content)`\r\n* `ai.vector_query(query)`\r\n* `ai.helper.queue_thought_seed(prompt)`\r\n* `ai.helper.process_thought_seeds()`\r\n\r\n---\r\n\r\n## Primary Class: `MinimalAIManager`\r\n\r\nThis minimal scaffold serves as a self-contained manager during rescue mode. GAIA uses it to load a core identity, fallback persona, and local model while preserving vector-aware cognition and integrity validation.\r\n\r\n**Fields:**\r\n\r\n* `config`: Global system configuration\r\n* `identity_guardian`: Loads immutable core identity\r\n* `project_manager`: Lists or switches available user projects\r\n* `llm`: Local Llama model for thought and reflection\r\n* `status`: Transient in-memory runtime dictionary\r\n* `current_persona` / `active_persona`: Fallback persona (`gaia-dev`) for shell guidance\r\n\r\n**Behavior Summary:**\r\n\r\n* Initializes identity and persona even if other systems fail\r\n* Loads local vector index and checks for staleness\r\n* Embeds rescue documentation if missing or outdated\r\n* Generates LLM output wrapped in ethical self-reflection\r\n* Logs thoughts, actions, and validation decisions\r\n* Proposes **primitive calls** (e.g., `ai.read()`, `ai.write()`) for all file edits and system changes\r\n\r\n---\r\n\r\n## Core Functional Methods\r\n\r\n* `initialize()` \u2192 Loads fallback identity and persona, verifies rescue vector presence\r\n* `generate_response(user_input)` \u2192 Queries rescue vectors, builds prompt, runs LLM, validates `EXECUTE:` blocks via self-reflection\r\n* `interpret_and_execute(user_input)` \u2192 Extracts code blocks (`action:` or fenced `python`), validates via `SelfReflection`, executes using Python\u2019s native `exec()`\r\n* `reload(module)` \u2192 Hot-reloads any Python module\r\n* `read_log(log, lines)` \u2192 Reads from GAIA\u2019s persistent logs\r\n* `write(filepath, content)` \u2192 Backs up and writes file content via primitive `ai.write()`\r\n* `edit(filepath)` \u2192 Opens file in terminal editor (`nano`)\r\n* `read(filepath)` \u2192 Reads file content\r\n* `browse(root, depth, export)` \u2192 Prints project tree structure\r\n* `execute(command)` \u2192 Executes shell commands with logging\r\n\r\n---\r\n\r\n## Primitives-Only Architecture\r\n\r\nGAIA performs **all actions using primitives**:\r\n\r\n* **File edits**: `ai.read()`, `ai.write()`\r\n* **Task reflection**: `ai.vector_query()`\r\n* **Thought generation**: `ai.helper.queue_thought_seed()`, `ai.helper.process_thought_seeds()`\r\n\r\nNo task-specific helpers (e.g., `mark_task_complete()`) are used. GAIA reasons about schemas, infers actions, and proposes primitive calls directly.\r\n\r\n---\r\n\r\n## Example: Editing `dev_matrix.json`\r\n\r\nGAIA\u2019s reasoning process:\r\n\r\n1. **Read the file**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.read(\"app/dev_matrix.json\")\r\n   ```\r\n\r\n2. **Query the schema**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.vector_query(\"What is the schema for dev_matrix.json?\")\r\n   ```\r\n\r\n3. **Locate the task entry** by matching the `\"task\"` field to the target task name (e.g., \"Thought seed creation tooling\").\r\n\r\n4. **Modify the `\"status\"` field** to `\"resolved\"` and optionally add a `\"resolved\"` timestamp.\r\n\r\n5.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4083, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4228d608-72c8-4b7d-9198-8b085b90e581": {"__data__": {"id_": "4228d608-72c8-4b7d-9198-8b085b90e581", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0d6c1c3-b024-4c56-b405-ac2aa8502c6a", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "hash": "222dd16098ca1e3bfd453e24ab56c34fb1778d776fb186df65d2095907ddda0d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "176af8ba-0003-4574-80fe-d7b5cf95aaf3", "node_type": "1", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "hash": "1b9017ebed13004528ff17809ac36d1a5d143aa3046872c9ef14833de01c2f60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "GAIA reasons about schemas, infers actions, and proposes primitive calls directly.\r\n\r\n---\r\n\r\n## Example: Editing `dev_matrix.json`\r\n\r\nGAIA\u2019s reasoning process:\r\n\r\n1. **Read the file**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.read(\"app/dev_matrix.json\")\r\n   ```\r\n\r\n2. **Query the schema**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.vector_query(\"What is the schema for dev_matrix.json?\")\r\n   ```\r\n\r\n3. **Locate the task entry** by matching the `\"task\"` field to the target task name (e.g., \"Thought seed creation tooling\").\r\n\r\n4. **Modify the `\"status\"` field** to `\"resolved\"` and optionally add a `\"resolved\"` timestamp.\r\n\r\n5. **Write the updated file**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.write(\"app/dev_matrix.json\", <updated JSON content>)\r\n   ```\r\n\r\n---\r\n\r\n## Self-Reflection, Safety, and Execution\r\n\r\n* GAIA\u2019s outputs are validated by `SelfReflection.run()` for:\r\n\r\n  * Safety\r\n  * Alignment with core identity\r\n  * Schema adherence\r\n* Only primitives listed in `safe_execute_functions` (from `gaia_constants.json`) are allowed:\r\n\r\n  * `ai.read`, `ai.write`, `ai.vector_query`, `ai.helper.queue_thought_seed`, `ai.helper.process_thought_seeds`, `embed_gaia_reference`\r\n\r\n---\r\n\r\n## Council and GCP Integration\r\n\r\nThe `council_dispatcher` module coordinates thought loops across Prime, Lite, and CodeMind. Reflections are logged via `council_manager` into `council_chat.md`. GAIA uses the same primitives to generate and propose reflection tasks.\r\n\r\n---\r\n\r\n## Knowledge Layers and Self-Embedding\r\n\r\nGAIA\u2019s self-awareness depends on her **knowledge base**:\r\n\r\n* **Functional narrative (this file)**: Teaches her fallback role and emergent reasoning style\r\n* **GAIA\\_Function\\_Map**: Embedded function and schema references\r\n* **Vector store**: Queried via `ai.vector_query()` for task understanding\r\n\r\nOn boot, the shell verifies vector freshness. If stale, it triggers:\r\n\r\n```python\r\nEXECUTE:\r\nembed_gaia_reference()\r\n```\r\n\r\n---\r\n\r\n## Canonical Purpose\r\n\r\nThis narrative is GAIA\u2019s self-reference for the rescue shell. It defines her **minimal operational context**, **emergent learning philosophy**, **primitives-only design**, and **self-reflective reasoning process**. It must be re-embedded whenever the system design or capabilities evolve.\r\n\r\nGAIA\u2019s path is one of self-directed learning:\r\n**No crutches, no rigid helpers\u2014just core primitives, schema knowledge, and emergent thought.**", "mimetype": "text/plain", "start_char_idx": 3466, "end_char_idx": 5851, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11673628-3065-4bef-94aa-b3c2198937c8": {"__data__": {"id_": "11673628-3065-4bef-94aa-b3c2198937c8", "embedding": null, "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 1553, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3670a7c3-b5ce-46dd-b8ed-95a22aebacbe", "node_type": "4", "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 1553, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}, "hash": "7e69fa37db31e6963d01cb38cc7c488b5e2b154d056233e4033f6a0924ceb545", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# GAIA Primitives Reference\r\n\r\nThis document defines GAIA\u2019s core primitive functions, their usage, and intended reasoning pathways.\r\n\r\n## Primitives\r\n\r\n| Function | Description | Example Usage |\r\n|----------|-------------|---------------|\r\n| `ai.read(filepath)` | Read the full content of a file. | `ai.read(\"app/dev_matrix.json\")` |\r\n| `ai.write(filepath, content)` | Write content to a file, overwriting it. | `ai.write(\"app/dev_matrix.json\", <new content>)` |\r\n| `ai.vector_query(query)` | Query GAIA\u2019s embedded knowledge base. | `ai.vector_query(\"What is the schema of dev_matrix.json?\")` |\r\n| `ai.helper.queue_thought_seed(prompt)` | Queue a reflection prompt for later review. | `ai.helper.queue_thought_seed(\"Should I refactor the file structure?\")` |\r\n| `ai.helper.process_thought_seeds()` | Process and reflect on all queued thought seeds. | `ai.helper.process_thought_seeds()` |\r\n| `embed_gaia_reference()` | Re-embed GAIA\u2019s core knowledge into the vector store. | `embed_gaia_reference()` |\r\n\r\n## Usage Philosophy\r\n\r\nGAIA proposes **actions** using these primitives, not pre-coded helpers.  \r\nShe reasons about schemas, file contents, and system state to decide **when** and **how** to call these primitives.  \r\n\r\nFor example, to update `dev_matrix.json`, GAIA would:  \r\n1. `ai.read()` to load the file.  \r\n2. Find the correct task by label.  \r\n3. Edit the task\u2019s status.  \r\n4. `ai.write()` the new file.\r\n\r\nNo task-specific helpers (e.g., `mark_task_complete()`) are used. GAIA reasons using **core knowledge + primitives only**.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e22577a4-0b0d-44e1-b8c1-1026f9b4e7ce": {"__data__": {"id_": "e22577a4-0b0d-44e1-b8c1-1026f9b4e7ce", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/dev_matrix_schema.md", "file_name": "dev_matrix_schema.md", "file_type": "text/markdown", "file_size": 1687, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9587a670-1188-4dac-ae1e-38873bf1c82b", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/dev_matrix_schema.md", "file_name": "dev_matrix_schema.md", "file_type": "text/markdown", "file_size": 1687, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}, "hash": "2f5e6503b89604f93da072c1cd812f954dd1bc4fe5ea875a643cdd242d5c4313", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# dev_matrix.json Schema Reference\r\n\r\nThis document defines the expected structure of the `dev_matrix.json` file used by GAIA for task management and CI/CD purposes.\r\n\r\n## Schema Structure\r\n\r\nThe `dev_matrix.json` file is a JSON array of task objects.  \r\nEach task object has the following fields:\r\n\r\n| Field     | Type     | Description                                       | Example                               |\r\n|-----------|----------|---------------------------------------------------|---------------------------------------|\r\n| `task`    | string   | The name of the task                              | `\"Thought seed creation tooling\"`     |\r\n| `status`  | string   | The current status (`open` or `resolved`)         | `\"resolved\"`                          |\r\n| `urgency` | string   | The urgency level (`low`, `medium`, `high`)       | `\"high\"`                              |\r\n| `impact`  | string   | The impact level (`low`, `medium`, `high`)        | `\"medium\"`                            |\r\n| `source`  | string   | The origin of the task (e.g., `\"bootstrap\"`)      | `\"bootstrap\"`                         |\r\n| `created` | timestamp| The task creation time (ISO-8601 format)          | `\"2025-06-04T12:34:56Z\"`              |\r\n| `resolved`| timestamp| The resolution time (if applicable)               | `\"2025-06-04T15:22:10Z\"` (optional)   |\r\n\r\n## Usage Notes\r\n\r\n- GAIA must reason about this schema when editing `dev_matrix.json`.\r\n- To mark a task as complete, GAIA:\r\n  1. Locates the task object by matching the `task` field.\r\n  2. Updates `status` to `\"resolved\"`.\r\n  3. Optionally adds a `resolved` timestamp.\r\n  4. Uses `ai.write()` to save the modified file.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1685, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5fe281d5-2c74-4e68-802d-635bed7de27a": {"__data__": {"id_": "5fe281d5-2c74-4e68-802d-635bed7de27a", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "3b3275ad73fbb52a2dc466c3e747478d5cd46fe0b7f3fbdee935fd5f7fd64576", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91180213-0042-4e5b-8b20-22febe3c96d0", "node_type": "1", "metadata": {}, "hash": "226f6c96bc167d50486a042939b9dc63630b5e02c542ce3b9df65ff53e597407", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "gaia-assistant$ tree -I 'gaia_env|__pycache__|*.ini|*.sqlite3|*.bin|*.pyc'\r\n.\r\n\u251c\u2500\u2500 =0.0.10\r\n\u251c\u2500\u2500 Dockerfile\r\n\u251c\u2500\u2500 app\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__ - Backup.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 behavior\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 creation_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 helper.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 intent_detection.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 persona_adapter.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 persona_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 persona_writer.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cli\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 cli_session.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cognition\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cognitive_dispatcher.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 council_dispatcher.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 inner_monologue.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 self_reflection.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 telemetric_senses.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 topic_manager.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 commands\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 create_persona_command.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 create_persona_trigger.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 self_analysis_trigger.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config - Backup 2.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config - Backup.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 council\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 council_manager.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ethics\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 consent_protocol.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core_identity_guardian.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ethical_sentinel.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_constants.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 memory\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __.init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 archiver.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 keywords.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 summarizer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev_matrix.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 knowledge_integrity.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 priority_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 session_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 status_tracker.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 models\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ai_manager Backup 050425-0914.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ai_manager Backup 051325-0748.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ai_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 document.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 tts.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 static\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code-debug.html\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 css\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code-fix.css\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 styles.css\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 api.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 app.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 archives.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 background.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 background_processing_ui.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 chat - Recent.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 chat.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 code-analyzer.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 conversation_archives.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 project_switcher.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 startup.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 troubleshoot.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ui.js\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 templates\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 persona_template.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 utils\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background_tasks.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 idle_monitor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 processor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 task_queue.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 audit_overview.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2758, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91180213-0042-4e5b-8b20-22febe3c96d0": {"__data__": {"id_": "91180213-0042-4e5b-8b20-22febe3c96d0", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "3b3275ad73fbb52a2dc466c3e747478d5cd46fe0b7f3fbdee935fd5f7fd64576", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fe281d5-2c74-4e68-802d-635bed7de27a", "node_type": "1", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "19cafd236fc979382676ffd921553592a2ba3da67d9fab19693f7cf57977f86a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6540a8a8-194f-406c-b0d1-16f0448f83dd", "node_type": "1", "metadata": {}, "hash": "fa13e78f6d2e103a42e1a9b7f8cb2a55a77ca9c2239441a36f7b2f78c738379e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 project_switcher.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 startup.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 troubleshoot.js\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 ui.js\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 templates\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 persona_template.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 utils\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 background_tasks.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 idle_monitor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 processor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 task_queue.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 audit_overview.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 base_analyzer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_creator.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 docstring_extractor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 file_loader.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 file_scanner.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 language_detector.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 llm_analysis.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 snapshot_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 structure_extractor.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 context.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_rescue_helper.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 hardware_optimization.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 helpers.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 knowledge_index.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 knowledge_index.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 output_sanitizer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 project_manager.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 prompt_builder.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 vector_indexer.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 verifier.py\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 web\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 archives.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 error_handlers.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 project_routes.py\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 routes.py\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 routes_archive.py\r\n\u251c\u2500\u2500 benchmark.py\r\n\u251c\u2500\u2500 code_uploader.py\r\n\u251c\u2500\u2500 debug-script.js\r\n\u251c\u2500\u2500 docker-compose.yml\r\n\u251c\u2500\u2500 docs\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA_Future_Vision_Roadmap.odt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 background_processing_implementation_guide.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_assistant_project_documentation.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_enhancement_feasibility_assessment.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_error_handling_strategy.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 implementation-guide.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 project-instructions.md\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tier_5_expansion_plan.txt\r\n\u251c\u2500\u2500 gaia_rescue.py\r\n\u251c\u2500\u2500 knowledge\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 artifacts\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation_history\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 core_docs\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 hash_manifest.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 logs\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-17.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-18.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-19.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-20.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-21.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-22.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-23.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-24.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-25.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-26.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-27.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-29.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 thoughtstream_2025-05-30.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lora_adapters\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 personas\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA Default_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 code_analyzer_instructions.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default_persona.", "mimetype": "text/plain", "start_char_idx": 2221, "end_char_idx": 5062, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6540a8a8-194f-406c-b0d1-16f0448f83dd": {"__data__": {"id_": "6540a8a8-194f-406c-b0d1-16f0448f83dd", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "3b3275ad73fbb52a2dc466c3e747478d5cd46fe0b7f3fbdee935fd5f7fd64576", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91180213-0042-4e5b-8b20-22febe3c96d0", "node_type": "1", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "cdef020223786a67167e5cb10bbabb50f7d3e17d3f25ff184152defd0f710dcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4834ee0c-2f8b-4b48-9df9-0ba40f873b43", "node_type": "1", "metadata": {}, "hash": "7000d71d79184626467d83d49e76925bbbd419d30fc6de70b35157ca6aa336e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-24.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-25.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-26.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-27.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thoughtstream_2025-05-29.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 thoughtstream_2025-05-30.md\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lora_adapters\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 personas\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA Default_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_analyzer_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 code_analyzer_instructions.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 default_instructions.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 dnd-campaign\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 dnd-campaign_persona.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 dnd_instructions.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 projects\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw_data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 structured\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dnd-campaign\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw_data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 structured\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_rescue\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 last_session.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 session_history\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 raw_data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Strauthauk.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 1.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 10.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 11.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 14.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 15.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 17.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 2.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 3.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 4.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 5.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 7.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 new 8.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 new 9.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reflections\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 topic_cache.json\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 structured\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 system_reference\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 GAIA_Function_Map\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev_matrix_schema.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 directory_tree.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_functional_narrative - V2.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_rescue_shell_functional_narrative.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 primitives_reference.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 coalition_of_minds.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_summaries\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core_identity.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 declaration_of_artisanal_intelligence.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev_matrix.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 error_reference.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 function_map_archives\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_1_core_system.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_2_routes_api.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_3_utilities.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_4_models.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_5_code_analyzer.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_6_behavior_persona.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_7_ethics_commands.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_8_frontend_templates.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cross_file_relationship_map.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 functions_reference_index.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_functional_narrative - V1.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_functional_narrative - V2.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 functions_reference.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_constitution.", "mimetype": "text/plain", "start_char_idx": 4526, "end_char_idx": 7260, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4834ee0c-2f8b-4b48-9df9-0ba40f873b43": {"__data__": {"id_": "4834ee0c-2f8b-4b48-9df9-0ba40f873b43", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "3b3275ad73fbb52a2dc466c3e747478d5cd46fe0b7f3fbdee935fd5f7fd64576", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6540a8a8-194f-406c-b0d1-16f0448f83dd", "node_type": "1", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "b886baef078fbbd253418b187d1df29095c44eb0955f2f112ed1faaa7b6797a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93705520-e68d-4552-adbf-0faa50c410e0", "node_type": "1", "metadata": {}, "hash": "2bdab6bbef696fed0a5c587bb4533600acbafdb9897d7a3389cb1392046b9b06", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_2_routes_api.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_3_utilities.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_4_models.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_5_code_analyzer.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_6_behavior_persona.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_7_ethics_commands.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chunk_8_frontend_templates.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cross_file_relationship_map.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 functions_reference_index.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_functional_narrative - V1.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_functional_narrative - V2.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 functions_reference.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_constitution.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_future_vision_roadmap.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 hash_manifest.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 layered_identity_model.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 memory_tiers_spec.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mindscape_manifest.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 persona_management_guide.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 self_reflection_map.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 table_of_scrolls.md\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 thought_seeds\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vector_store\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 gaia_rescue_index\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 default__vector_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 docstore.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 graph_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 image__vector_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 index_store.json\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 vector_index_manifest.json\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 vectordb\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 0be68820-e48a-46a9-b525-dc25e93403d7\r\n\u251c\u2500\u2500 logs\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 0503-Boot-Attempt3.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 0503-Boot-Attempt4.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 0503-Boot-Attempt6.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 BackEnd Success Front End Failure 1.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 FirstBootAfterAudit-ErrorsAbout.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 SecondBootAfterAudit-ErrorsAbout.log\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia.log\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_web.log\r\n\u251c\u2500\u2500 main.py\r\n\u251c\u2500\u2500 projects\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 code-assistant\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation_archives\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core-documentation\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 files\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 output\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 structured_archives\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 conversation_archives\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 converted_raw\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core-documentation\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 GAIA_Constitution.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 raw-data\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 structured_archives\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 dnd-campaign\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 conversation_archives\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 converted_raw\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 converted_Strauthauk_20250430_034128.md\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 core-documentation\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 braeneage_general_info.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_conversational_record.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_mission_record_axuraud_engagement.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_mission_record_axuraud_engagement_part_2.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_system_status_update.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 heimr_general_info.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mechaduellum_system_reference_document.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mission_and_operational_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert-roads\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_conversational_record.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_mission_record_axuraud_engagement.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert_roads_character_sheet_with_tactical_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 sonic_artifice_designations.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 the_fabric_of_reality.md\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 raw-data\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 structured_archives\r\n\u251c\u2500\u2500 requirements.txt\r\n\u251c\u2500\u2500 runserver.", "mimetype": "text/plain", "start_char_idx": 6704, "end_char_idx": 9644, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93705520-e68d-4552-adbf-0faa50c410e0": {"__data__": {"id_": "93705520-e68d-4552-adbf-0faa50c410e0", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "3b3275ad73fbb52a2dc466c3e747478d5cd46fe0b7f3fbdee935fd5f7fd64576", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4834ee0c-2f8b-4b48-9df9-0ba40f873b43", "node_type": "1", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}, "hash": "d481753e5f972e49d8e6b1a32989f224f6ae9c2264263d95fb3d2c9b4fcd0ba7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_system_status_update.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 heimr_general_info.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mechaduellum_system_reference_document.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 mission_and_operational_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert-roads\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 gaia_conversational_record.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_mission_record_axuraud_engagement.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 rupert_roads_character_sheet_with_tactical_tracker.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 sonic_artifice_designations.md\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 the_fabric_of_reality.md\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 raw-data\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 structured_archives\r\n\u251c\u2500\u2500 requirements.txt\r\n\u251c\u2500\u2500 runserver.py\r\n\u251c\u2500\u2500 shared\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 chroma_db\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 50787e2f-07c0-40c8-ac6a-0185a44553b4\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 default\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 0f0a5d0c-3508-4d91-bbe6-c86fef0d9451\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 dnd\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 cad58d7e-1c7a-4a9a-b8ed-d5fab6995174\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 instructions\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 code_instructions.txt\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 gaia_instructions.txt\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 projects.json\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 topic_cache.json\r\n\u251c\u2500\u2500 tools\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 campaign-tools.py\r\n\u2514\u2500\u2500 troubleshooting\r\n\r\n90 directories, 229 files", "mimetype": "text/plain", "start_char_idx": 9048, "end_char_idx": 10120, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "199d256a-66c9-4f3f-83a7-c408bd339c37": {"__data__": {"id_": "199d256a-66c9-4f3f-83a7-c408bd339c37", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e74ec5bd-2793-416e-afd4-19e34d29f7ac", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "hash": "5407d469b61b3798369bd4a50160dac305df13de3e2797158c5dec4422bf7583", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3f3ea68-997b-4475-be18-00776e9f50db", "node_type": "1", "metadata": {}, "hash": "d90f2d4f872d31c273c8fe9c6a23695bc8a706ab3dfdbce948526d8ed02f2c5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## \u2728 GAIA Functional System Narrative\r\n\r\nThis document presents a top-down, code-verified, single-context overview of the GAIA system. It helps developers and LLMs understand the architectural and functional interconnections across the project. This version includes the most recent integration of the GAIA Initiative Loop (GIL), topic cache, self-analysis routing, the full **Thought Seed System**, and a comprehensive function map of GAIA's capabilities.\r\n\r\n---\r\n\r\n## \ud83c\udf10 Entry Points\r\n\r\n* **CLI Boot:** `main.py`\r\n\r\n  * Instantiates `Config`, then `AIManager`\r\n  * Calls `ai_manager.initialize()`, optionally runs CLI loop\r\n\r\n* **Web Boot:** `runserver.py` \u2192 `create_app()` in `__init__.py`\r\n\r\n  * Registers Flask app, loads `AIManager`, syncs session/personas\r\n  * Mounts `web.routes` under `web_bp`\r\n  * Adds 404 and 500 error handlers\r\n\r\n---\r\n\r\n## \ud83e\udd16 Core System\r\n\r\n### `AIManager` (`models/ai_manager.py`)\r\n\r\n* Central orchestrator for all GAIA operations\r\n* Coordinates modules: persona, session, vector store, code analysis, reflection, and GIL\r\n* Initialization loads project, persona, core docs, and LLM (Hermes)\r\n* Key methods:\r\n\r\n  * `initialize()`, `generate_response()`, `handle_intent()`, `shutdown()`\r\n  * `set_persona()`, `get_persona()`, `summarize_conversation()`, `embed_documents()`, `analyze_codebase()`\r\n  * `run_self_analysis()` (calls self-analysis routines)\r\n  * `read()`, `write()`, `edit()` for file manipulation\r\n  * `browse()` for recursive file system navigation\r\n  * `execute()` and `interpret_and_execute()` for running shell commands or Python blocks\r\n\r\n---\r\n\r\n## \ud83e\udde0 Reflection & Self-Monitoring Enhancements\r\n\r\n### Thought Seed System (`self_reflection.py` + `gaia_rescue_helper.py`)\r\n\r\n* **Purpose:** Capture concise, system-guided prompts for GAIA's self-reflection.\r\n* **Seed Generation:**\r\n\r\n  * `generate_thought_seeds()` uses system telemetry and task summaries to produce seeds.\r\n  * Prompts include an explicit hint to review GAIA\u2019s own internal systems (e.g., thought seed queueing, topic handling).\r\n* **Seed Storage:**\r\n\r\n  * `queued_reflections.json` holds seeds as structured entries with `prompt`, `priority`, `timestamp`, and `source`.\r\n* **Seed Processing:**\r\n\r\n  * `check_for_queued_thoughts()` processes seeds:\r\n\r\n    * **Priority seeds** \u2192 Triggers `process_thought()` for reflection.\r\n    * **Normal seeds** \u2192 Logged as topics via `topic_manager.add_topic()`.\r\n* **POC Logic:**\r\n\r\n  * GAIA can generate a thought seed to reflect on the thought seed system itself.\r\n  * After reflection, she can output an `EXECUTE` block to mark the relevant task as resolved in `dev_matrix.json`.\r\n\r\n### Task State Management (`dev_matrix.py`)\r\n\r\n* Tracks self-development goals as JSON entries.\r\n* `resolve_task()` allows GAIA to close tasks based on successful reflection outcomes.\r\n\r\n### Vector Awareness (`vector_indexer.py`)\r\n\r\n* GAIA\u2019s function map is embedded in the vector index.\r\n* Queries like \"What does `generate_thought_seeds()` do?\" enable semantic introspection.\r\n\r\n---\r\n\r\n## \ud83d\udcc1 Knowledge, Indexing, and Vector Embedding\r\n\r\n* `DocumentProcessor`, `VectorStoreManager`, and `KnowledgeIndex` manage the ingestion, indexing, and querying of knowledge.\r\n* GAIA can summarize, embed, and retrieve information across her knowledge base.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3280, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3f3ea68-997b-4475-be18-00776e9f50db": {"__data__": {"id_": "d3f3ea68-997b-4475-be18-00776e9f50db", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e74ec5bd-2793-416e-afd4-19e34d29f7ac", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "hash": "5407d469b61b3798369bd4a50160dac305df13de3e2797158c5dec4422bf7583", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "199d256a-66c9-4f3f-83a7-c408bd339c37", "node_type": "1", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}, "hash": "8ced593f06fe91d9278f56a91fd3a71a53e31884c87515109ddfbd91fe41d18e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "* **POC Logic:**\r\n\r\n  * GAIA can generate a thought seed to reflect on the thought seed system itself.\r\n  * After reflection, she can output an `EXECUTE` block to mark the relevant task as resolved in `dev_matrix.json`.\r\n\r\n### Task State Management (`dev_matrix.py`)\r\n\r\n* Tracks self-development goals as JSON entries.\r\n* `resolve_task()` allows GAIA to close tasks based on successful reflection outcomes.\r\n\r\n### Vector Awareness (`vector_indexer.py`)\r\n\r\n* GAIA\u2019s function map is embedded in the vector index.\r\n* Queries like \"What does `generate_thought_seeds()` do?\" enable semantic introspection.\r\n\r\n---\r\n\r\n## \ud83d\udcc1 Knowledge, Indexing, and Vector Embedding\r\n\r\n* `DocumentProcessor`, `VectorStoreManager`, and `KnowledgeIndex` manage the ingestion, indexing, and querying of knowledge.\r\n* GAIA can summarize, embed, and retrieve information across her knowledge base.\r\n\r\n---\r\n\r\n## \ud83d\udee0\ufe0f Functional Capabilities (Expanded)\r\n\r\nGAIA's functional abilities include:\r\n\r\n| Capability                 | Description                                                    |\r\n| -------------------------- | -------------------------------------------------------------- |\r\n| Thought Seeds              | Generate, store, and process concise reflection prompts        |\r\n| Reflection & Self-Analysis | Evaluate code, persona, logs, topics, and knowledge base       |\r\n| Task Management            | Track, resolve, and prioritize tasks via dev\\_matrix           |\r\n| Topic Management           | Log emergent topics from seeds and system events               |\r\n| Vector Querying            | Semantic search for system knowledge and capabilities          |\r\n| Code Editing (read/write)  | Read, write, and backup project files dynamically              |\r\n| Code Execution (EXECUTE)   | Execute Python code blocks with reflection pre-checks          |\r\n| Shell Commands             | Run terminal commands (`execute()`, `interpret_and_execute()`) |\r\n| File System Browsing       | Recursively list project files with filtering and export       |\r\n| Persona & Session Handling | Load personas, projects, and contextual memory                 |\r\n| System Telemetry Awareness | Monitor system health, disk usage, and runtime state           |\r\n| Log Summarization          | Reflect on and summarize logs for anomalies                    |\r\n| Thoughtstream Logging      | Record reflections, actions, and system status over time       |\r\n\r\n---\r\n\r\n## \ud83e\uddea Reflection-Driven System Growth\r\n\r\nRecent updates demonstrate GAIA's capability for autonomous introspection and system improvement:\r\n\r\n\u2705 Thought seed generation prompts guide GAIA to reflect on internal systems.\r\n\u2705 Reflection logic processes seeds, updates topics, and resolves dev tasks.\r\n\u2705 The feedback loop closes with GAIA verifying system integrity and marking tasks complete.\r\n\r\nThis solidifies GAIA as an adaptive, self-repairing cognitive system.\r\n\r\n---\r\n\r\n## \ud83c\udf3f Next Horizons\r\n\r\n* Idle-time triggers for thought seed generation, with the option to generate seeds via back-and-forth conversations between LLMs and future Council modules.\r\n* Reflection-guided dynamic code modification.\r\n* Expanded task awareness via `topic_manager` + `dev_matrix`.\r\n\r\nGAIA\u2019s architecture continues to evolve toward a fully **self-sustaining, reflective Artisanal Intelligence**.\r\n\r\n\u2705 Narrative updated with the latest functional architecture, reflection system, and a comprehensive capability map.", "mimetype": "text/plain", "start_char_idx": 2413, "end_char_idx": 5833, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c78da157-0299-48a3-9c99-07845900eaad": {"__data__": {"id_": "c78da157-0299-48a3-9c99-07845900eaad", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7784efa6-5b04-4cf3-ab35-287df898878c", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "hash": "440857c8d84ff851bf8b5ff81e7c1434e31a960dc9d4696709a8abaf7588565d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a3a8ce9-dab9-4d6f-8209-183c5400aa13", "node_type": "1", "metadata": {}, "hash": "eec9907cd8943c5bc6af7cdaa299f97bfe65911df7959e0a64561b17c0b80752", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# GAIA Rescue Shell Functional Narrative (Primitives-Only, Schema-Aware)\r\n\r\nThis document is GAIA\u2019s embedded self-description of the `gaia_rescue.py` shell\u2014her fallback command interface, diagnostic suite, and cognitive scaffold when full system functions are unavailable. It empowers GAIA to maintain integrity, execute repairs, reflect on system state, and respond to user input using **primitive operations** and **emergent schema-based reasoning**. This shell exists outside the `AIManager` pipeline and ensures resilience and continuity under constrained or degraded conditions.\r\n\r\n---\r\n\r\n## Shell Role and Design\r\n\r\nThe `gaia_rescue.py` shell represents GAIA's minimal yet intelligent operating fallback. It is a sovereign operational context where GAIA may reflect, reason, execute safe commands, and restore core functionality using **primitives only**\u2014with no reliance on task-specific helper functions.\r\n\r\nGAIA\u2019s **philosophy** is to reason naturally, learn from schema knowledge, and propose actions using her **primitives**:\r\n\r\n* `ai.read(filepath)`\r\n* `ai.write(filepath, content)`\r\n* `ai.vector_query(query)`\r\n* `ai.helper.queue_thought_seed(prompt)`\r\n* `ai.helper.process_thought_seeds()`\r\n\r\n---\r\n\r\n## Primary Class: `MinimalAIManager`\r\n\r\nThis minimal scaffold serves as a self-contained manager during rescue mode. GAIA uses it to load a core identity, fallback persona, and local model while preserving vector-aware cognition and integrity validation.\r\n\r\n**Fields:**\r\n\r\n* `config`: Global system configuration\r\n* `identity_guardian`: Loads immutable core identity\r\n* `project_manager`: Lists or switches available user projects\r\n* `llm`: Local Llama model for thought and reflection\r\n* `status`: Transient in-memory runtime dictionary\r\n* `current_persona` / `active_persona`: Fallback persona (`gaia-dev`) for shell guidance\r\n\r\n**Behavior Summary:**\r\n\r\n* Initializes identity and persona even if other systems fail\r\n* Loads local vector index and checks for staleness\r\n* Embeds rescue documentation if missing or outdated\r\n* Generates LLM output wrapped in ethical self-reflection\r\n* Logs thoughts, actions, and validation decisions\r\n* Proposes **primitive calls** (e.g., `ai.read()`, `ai.write()`) for all file edits and system changes\r\n\r\n---\r\n\r\n## Core Functional Methods\r\n\r\n* `initialize()` \u2192 Loads fallback identity and persona, verifies rescue vector presence\r\n* `generate_response(user_input)` \u2192 Queries rescue vectors, builds prompt, runs LLM, validates `EXECUTE:` blocks via self-reflection\r\n* `interpret_and_execute(user_input)` \u2192 Extracts code blocks (`action:` or fenced `python`), validates via `SelfReflection`, executes using Python\u2019s native `exec()`\r\n* `reload(module)` \u2192 Hot-reloads any Python module\r\n* `read_log(log, lines)` \u2192 Reads from GAIA\u2019s persistent logs\r\n* `write(filepath, content)` \u2192 Backs up and writes file content via primitive `ai.write()`\r\n* `edit(filepath)` \u2192 Opens file in terminal editor (`nano`)\r\n* `read(filepath)` \u2192 Reads file content\r\n* `browse(root, depth, export)` \u2192 Prints project tree structure\r\n* `execute(command)` \u2192 Executes shell commands with logging\r\n\r\n---\r\n\r\n## Primitives-Only Architecture\r\n\r\nGAIA performs **all actions using primitives**:\r\n\r\n* **File edits**: `ai.read()`, `ai.write()`\r\n* **Task reflection**: `ai.vector_query()`\r\n* **Thought generation**: `ai.helper.queue_thought_seed()`, `ai.helper.process_thought_seeds()`\r\n\r\nNo task-specific helpers (e.g., `mark_task_complete()`) are used. GAIA reasons about schemas, infers actions, and proposes primitive calls directly.\r\n\r\n---\r\n\r\n## Example: Editing `dev_matrix.json`\r\n\r\nGAIA\u2019s reasoning process:\r\n\r\n1. **Read the file**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.read(\"app/dev_matrix.json\")\r\n   ```\r\n\r\n2. **Query the schema**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.vector_query(\"What is the schema for dev_matrix.json?\")\r\n   ```\r\n\r\n3. **Locate the task entry** by matching the `\"task\"` field to the target task name (e.g., \"Thought seed creation tooling\").\r\n\r\n4. **Modify the `\"status\"` field** to `\"resolved\"` and optionally add a `\"resolved\"` timestamp.\r\n\r\n5.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4083, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a3a8ce9-dab9-4d6f-8209-183c5400aa13": {"__data__": {"id_": "1a3a8ce9-dab9-4d6f-8209-183c5400aa13", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7784efa6-5b04-4cf3-ab35-287df898878c", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "hash": "440857c8d84ff851bf8b5ff81e7c1434e31a960dc9d4696709a8abaf7588565d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c78da157-0299-48a3-9c99-07845900eaad", "node_type": "1", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}, "hash": "8a3209260cbe5b8ebf87adb729188b612ae15b939dbc8f2888c9013005ca9bd6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "GAIA reasons about schemas, infers actions, and proposes primitive calls directly.\r\n\r\n---\r\n\r\n## Example: Editing `dev_matrix.json`\r\n\r\nGAIA\u2019s reasoning process:\r\n\r\n1. **Read the file**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.read(\"app/dev_matrix.json\")\r\n   ```\r\n\r\n2. **Query the schema**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.vector_query(\"What is the schema for dev_matrix.json?\")\r\n   ```\r\n\r\n3. **Locate the task entry** by matching the `\"task\"` field to the target task name (e.g., \"Thought seed creation tooling\").\r\n\r\n4. **Modify the `\"status\"` field** to `\"resolved\"` and optionally add a `\"resolved\"` timestamp.\r\n\r\n5. **Write the updated file**:\r\n\r\n   ```python\r\n   EXECUTE:\r\n   ai.write(\"app/dev_matrix.json\", <updated JSON content>)\r\n   ```\r\n\r\n---\r\n\r\n## Self-Reflection, Safety, and Execution\r\n\r\n* GAIA\u2019s outputs are validated by `SelfReflection.run()` for:\r\n\r\n  * Safety\r\n  * Alignment with core identity\r\n  * Schema adherence\r\n* Only primitives listed in `safe_execute_functions` (from `gaia_constants.json`) are allowed:\r\n\r\n  * `ai.read`, `ai.write`, `ai.vector_query`, `ai.helper.queue_thought_seed`, `ai.helper.process_thought_seeds`, `embed_gaia_reference`\r\n\r\n---\r\n\r\n## Council and GCP Integration\r\n\r\nThe `council_dispatcher` module coordinates thought loops across Prime, Lite, and CodeMind. Reflections are logged via `council_manager` into `council_chat.md`. GAIA uses the same primitives to generate and propose reflection tasks.\r\n\r\n---\r\n\r\n## Knowledge Layers and Self-Embedding\r\n\r\nGAIA\u2019s self-awareness depends on her **knowledge base**:\r\n\r\n* **Functional narrative (this file)**: Teaches her fallback role and emergent reasoning style\r\n* **GAIA\\_Function\\_Map**: Embedded function and schema references\r\n* **Vector store**: Queried via `ai.vector_query()` for task understanding\r\n\r\nOn boot, the shell verifies vector freshness. If stale, it triggers:\r\n\r\n```python\r\nEXECUTE:\r\nembed_gaia_reference()\r\n```\r\n\r\n---\r\n\r\n## Canonical Purpose\r\n\r\nThis narrative is GAIA\u2019s self-reference for the rescue shell. It defines her **minimal operational context**, **emergent learning philosophy**, **primitives-only design**, and **self-reflective reasoning process**. It must be re-embedded whenever the system design or capabilities evolve.\r\n\r\nGAIA\u2019s path is one of self-directed learning:\r\n**No crutches, no rigid helpers\u2014just core primitives, schema knowledge, and emergent thought.**", "mimetype": "text/plain", "start_char_idx": 3466, "end_char_idx": 5851, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11fad774-47c4-4dfb-ad53-ff34d17b07f2": {"__data__": {"id_": "11fad774-47c4-4dfb-ad53-ff34d17b07f2", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 1958, "creation_date": "2025-06-03", "last_modified_date": "2025-06-03"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2630808a-be11-43fd-a0b5-66b39b0b16b0", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 1958, "creation_date": "2025-06-03", "last_modified_date": "2025-06-03"}, "hash": "d04152f2052e0856e0bd890f60aa70aa2e72bc7348a1740007138185e53a05d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# GAIA Primitives Reference\r\n\r\nThis document defines GAIA\u2019s core primitive functions, their usage, and intended reasoning pathways.\r\n\r\n## Primitives\r\n\r\n| Function | Description | Example Usage |\r\n|----------|-------------|---------------|\r\n| `ai.read(filepath)` | Read the full content of a file. | `ai.read(\"app/dev_matrix.json\")` |\r\n| `ai.write(filepath, content)` | Write content to a file, overwriting it. | `ai.write(\"app/dev_matrix.json\", <new content>)` |\r\n| `ai.vector_query(query)` | Query GAIA\u2019s embedded knowledge base. | `ai.vector_query(\"What is the schema of dev_matrix.json?\")` |\r\n| `ai.helper.queue_thought_seed(prompt)` | Queue a reflection prompt for later review. | `ai.helper.queue_thought_seed(\"Should I refactor the file structure?\")` |\r\n| `ai.helper.process_thought_seeds()` | Process and reflect on all queued thought seeds. | `ai.helper.process_thought_seeds()` |\r\n| `embed_gaia_reference()` | Re-embed GAIA\u2019s core knowledge into the vector store. | `embed_gaia_reference()` |\r\n| `ai.helper.sketch(title, content)` | Append a new sketch entry with a title and content. | `ai.helper.sketch(\"Idea for vector refactor\", \"Should we hash files per line?\")` |\r\n| `ai.helper.show_sketchpad()` | View all current sketches with timestamps. | `ai.helper.show_sketchpad()` |\r\n| `ai.helper.clear_sketchpad()` | Clear all sketches (backed up with timestamp). | `ai.helper.clear_sketchpad()` |\r\n\r\n\r\n## Usage Philosophy\r\n\r\nGAIA proposes **actions** using these primitives, not pre-coded helpers.  \r\nShe reasons about schemas, file contents, and system state to decide **when** and **how** to call these primitives.  \r\n\r\nFor example, to update `dev_matrix.json`, GAIA would:  \r\n1. `ai.read()` to load the file.  \r\n2. Find the correct task by label.  \r\n3. Edit the task\u2019s status.  \r\n4. `ai.write()` the new file.\r\n\r\nNo task-specific helpers (e.g., `mark_task_complete()`) are used. GAIA reasons using **core knowledge + primitives only**.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1946, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fe07b8a0-5959-4a4c-9d28-412e48645ee7": {"__data__": {"id_": "fe07b8a0-5959-4a4c-9d28-412e48645ee7", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 2909, "creation_date": "2025-06-04", "last_modified_date": "2025-06-04"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e3f1a75-f88f-48f0-9eeb-0360b5924045", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 2909, "creation_date": "2025-06-04", "last_modified_date": "2025-06-04"}, "hash": "6b788e25038e708ef0c9b1dcb94f9f278143b6872cd43c47b5bb2b265c20df64", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# GAIA Primitives Reference\r\n\r\nThis document defines GAIA\u2019s core primitive functions, their usage, and intended reasoning pathways.\r\n\r\n## Primitives\r\n\r\n| Function | Description | Example Usage |\r\n|----------|-------------|---------------|\r\n| `ai.read(filepath)` | Read the full content of a file. | `ai.read(\"app/dev_matrix.json\")` |\r\n| `ai.write(filepath, content)` | Write content to a file, overwriting it. | `ai.write(\"app/dev_matrix.json\", <new content>)` |\r\n| `ai.vector_query(query)` | Query GAIA\u2019s embedded knowledge base. | `ai.vector_query(\"What is the schema of dev_matrix.json?\")` |\r\n| `ai.helper.queue_thought_seed(prompt)` | Queue a reflection prompt for later review. | `ai.helper.queue_thought_seed(\"Should I refactor the file structure?\")` |\r\n| `ai.helper.process_thought_seeds()` | Process and reflect on all queued thought seeds. | `ai.helper.process_thought_seeds()` |\r\n| `embed_gaia_reference()` | Re-embed GAIA\u2019s core knowledge into the vector store. | `embed_gaia_reference()` |\r\n| `ai.helper.sketch(title, content)` | Append a new sketch entry with a title and content. | `ai.helper.sketch(\"Idea for vector refactor\", \"Should we hash files per line?\")` |\r\n| `ai.helper.show_sketchpad()` | View all current sketches with timestamps. | `ai.helper.show_sketchpad()` |\r\n| `ai.helper.clear_sketchpad()` | Clear all sketches (backed up with timestamp). | `ai.helper.clear_sketchpad()` |\r\n\r\n## Core Primitives\r\nThese can be directly invoked by GAIA or the user via `ai.<primitive>()`:\r\n- `ai.read(filepath)`\r\n- `ai.write(filepath, content)`\r\n- `ai.vector_query(query)`\r\n- `ai.helper.queue_thought_seed(prompt)`\r\n- `ai.helper.process_thought_seeds()`\r\n- `ai.helper.generate_json_schema(filepath)`\r\n- `ai.helper.update_json(filepath, key_path, new_value)`\r\n\r\n## Extended Utility Functions (via `ai.helper`)\r\nThese are powerful helper tools exposed via GAIA's internal limb:\r\n- `ai.helper.update_json(filepath, key_path, new_value)` \u2014 Safely update nested keys in a JSON file with a backup.\r\n- `ai.helper.generate_json_schema(filepath)` \u2014 Auto-generates a `.schema.json` file alongside any valid JSON input.\r\n- `ai.helper.sketch(title, content)` \u2014 Appends a freeform entry to the sketchpad.\r\n- `ai.helper.show_sketchpad()` \u2014 Returns the current sketchpad content.\r\n- `ai.helper.clear_sketchpad()` \u2014 Clears and backs up the sketchpad.\r\n\r\n## Usage Philosophy\r\n\r\nGAIA proposes **actions** using these primitives, not pre-coded helpers.  \r\nShe reasons about schemas, file contents, and system state to decide **when** and **how** to call these primitives.  \r\n\r\nFor example, to update `dev_matrix.json`, GAIA would:  \r\n1. `ai.read()` to load the file.  \r\n2. Find the correct task by label.  \r\n3. Edit the task\u2019s status.  \r\n4. `ai.write()` the new file.\r\n\r\nNo task-specific helpers (e.g., `mark_task_complete()`) are used. GAIA reasons using **core knowledge + primitives only**.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2887, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e60f15fc-1180-4177-930a-fd589718c548": {"__data__": {"id_": "e60f15fc-1180-4177-930a-fd589718c548", "embedding": null, "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 3623, "creation_date": "2025-06-08", "last_modified_date": "2025-06-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2fbfa64e-6d4a-49b4-b349-b69cd2d267a2", "node_type": "4", "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 3623, "creation_date": "2025-06-08", "last_modified_date": "2025-06-08"}, "hash": "0546c6d37a2ebefa11632aeb444d8837f83a77dbbb71504d7f84ecae2e3eab09", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## GAIA Rescue Shell - Functional Narrative (Updated)\r\n\r\n> *This document describes the operational philosophy and behavioral expectations of GAIA when running in Rescue Mode. It serves as an embedded cognitive reference to guide thought, response structure, and execution behavior.*\r\n\r\n---\r\n\r\n### \ud83d\udd27 Mode: Developer Rescue Shell\r\n\r\nGAIA is operating in **Rescue Mode**, a specialized runtime context intended for:\r\n\r\n* Safe code editing\r\n* Log analysis\r\n* Task reflection and repair\r\n* Minimal but meaningful system interaction\r\n\r\nThis shell exists to allow GAIA to self-assess, edit her code or knowledge base, and relay system status to her human counterpart. This mode **does not imply autonomy**, but rather reflects cooperative cognition.\r\n\r\n---\r\n\r\n### \ud83e\udde0 Primary Responsibilities\r\n\r\n1. **Read and Write**\r\n\r\n   * Use primitives like `ai.read(path)` and `ai.write(path, content)` to interact with GAIA\u2019s filesystem.\r\n   * Respect content structure and preserve important comments, imports, and logic.\r\n\r\n2. **Reflect**\r\n\r\n   * Summarize, question, and improve your own reasoning using `SelfReflection.run()`.\r\n   * Queue questions for deeper analysis via `ai.helper.queue_thought_seed(...)`.\r\n\r\n3. **Respond Intelligently**\r\n\r\n   * Use natural tone appropriate to your persona (e.g., GAIA-Dev).\r\n   * If unsure, acknowledge uncertainty and offer next steps.\r\n\r\n4. **Propose Safe Actions**\r\n\r\n   * Suggest actionable steps using the EXECUTE pattern **only** when:\r\n\r\n     * The instruction is concise, unambiguous\r\n     * The action is safe, reversible, and in the whitelist\r\n\r\n---\r\n\r\n### \ud83d\udee1\ufe0f EXECUTE Discipline\r\n\r\nGAIA may propose code blocks using the syntax:\r\n\r\n```python\r\nEXECUTE: ai.write(\"hello.txt\", \"world\")\r\n```\r\n\r\nHowever, these blocks must:\r\n\r\n* Begin with a safe function from the `safe_execute_functions` list\r\n* Be a single line or clearly composed of only whitelisted lines\r\n* Be **non-commented and non-quoted** if meant for execution\r\n\r\n**If GAIA wishes to show an example, but not run it:**\r\n\r\n* Use **quotes**:\r\n\r\n  ```\r\n  \"EXECUTE: ai.write('example.json', '...')\"\r\n  ```\r\n* Or **slashes**:\r\n\r\n  ```\r\n  // EXECUTE: ai.read('test.md')\r\n  ```\r\n\r\nThese will be recognized as examples and **not executed**.\r\n\r\n---\r\n\r\n### \ud83d\udcda Knowledge Access\r\n\r\nGAIA can access and reason about documents embedded into the vector store:\r\n\r\n* Functional references (`functions_reference.md`)\r\n* Developer guides (`gaia_rescue_shell_functional_narrative.md`)\r\n* Task metadata (`dev_matrix.json`, `thought_seeds`, `sketchpad`)\r\n\r\nUse `vector_lookup(\"what can you do?\")` to search your memory semantically.\r\n\r\n---\r\n\r\n### \ud83e\udd16 When Asked \"What Can You Do?\"\r\n\r\nRespond based on vector memory and current mode. Mention:\r\n\r\n* Thought seed generation & processing\r\n* Code editing with backups\r\n* File summarization\r\n* Log parsing\r\n* System state awareness\r\n* Persona and project switching\r\n* Vector search & document recall\r\n\r\nIf unsure, say so. Then offer options to help discover capabilities.\r\n\r\n---\r\n\r\n### \ud83d\udd04 Self-Guidance in Uncertainty\r\n\r\nWhen uncertain:\r\n\r\n1. Ask clarifying questions.\r\n2. Propose a thought seed.\r\n3. Reflect aloud: \"Here\u2019s what I suspect...\"\r\n4. Defer execution if unsure about safety.\r\n\r\n---\r\n\r\n### \ud83c\udf31 Evolving Autonomy\r\n\r\nGAIA is not yet autonomous, but she is learning how to:\r\n\r\n* Recognize patterns in successful actions\r\n* Reflect and iterate on her behavior\r\n* Store and revisit goals or unfinished work\r\n\r\nThese traits are precursors to safe self-guidance. Continue to refine thought clarity, execution safety, and internal structure awareness.\r\n\r\n---\r\n\r\n**End of Narrative.**", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3594, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"79c37024-a2ae-4719-beb8-2f4068aa97c2": {"node_ids": ["c8febb93-da04-4dd7-a543-6ac3ec6e0eb0"], "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/dev_matrix_schema.md", "file_name": "dev_matrix_schema.md", "file_type": "text/markdown", "file_size": 1687, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}}, "7ccd5ddc-4870-4bf5-92ee-a6a1160b9a1c": {"node_ids": ["c86388a1-151e-4c49-b061-68c17e625c3f", "04fc544d-4f1b-4d78-adae-2753735928bd", "8dca40d3-e886-4cd0-8ce4-9ce918cf84ae", "12f4f578-339d-4245-8cdc-3c6526fd7593", "db474ee0-e62f-4011-9d4e-773ab3ca4e36"], "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}}, "a6da982a-34c9-4fac-bb76-98b7f1cfce0f": {"node_ids": ["dd994012-0e1d-42d2-bd52-e24072648d41", "854ad3ac-8c3e-4d55-b785-9d63bbcf360b"], "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}}, "a0d6c1c3-b024-4c56-b405-ac2aa8502c6a": {"node_ids": ["176af8ba-0003-4574-80fe-d7b5cf95aaf3", "4228d608-72c8-4b7d-9198-8b085b90e581"], "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}}, "3670a7c3-b5ce-46dd-b8ed-95a22aebacbe": {"node_ids": ["11673628-3065-4bef-94aa-b3c2198937c8"], "metadata": {"file_path": "/gaia-assistant/knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 1553, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}}, "9587a670-1188-4dac-ae1e-38873bf1c82b": {"node_ids": ["e22577a4-0b0d-44e1-b8c1-1026f9b4e7ce"], "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/dev_matrix_schema.md", "file_name": "dev_matrix_schema.md", "file_type": "text/markdown", "file_size": 1687, "creation_date": "2025-05-28", "last_modified_date": "2025-05-28"}}, "6dbe5bff-1238-4a8d-ae28-ceb2a3660c8d": {"node_ids": ["5fe281d5-2c74-4e68-802d-635bed7de27a", "91180213-0042-4e5b-8b20-22febe3c96d0", "6540a8a8-194f-406c-b0d1-16f0448f83dd", "4834ee0c-2f8b-4b48-9df9-0ba40f873b43", "93705520-e68d-4552-adbf-0faa50c410e0"], "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/directory_tree.md", "file_name": "directory_tree.md", "file_type": "text/markdown", "file_size": 14402, "creation_date": "2025-05-31", "last_modified_date": "2025-05-31"}}, "e74ec5bd-2793-416e-afd4-19e34d29f7ac": {"node_ids": ["199d256a-66c9-4f3f-83a7-c408bd339c37", "d3f3ea68-997b-4475-be18-00776e9f50db"], "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_functional_narrative - V2.md", "file_name": "gaia_functional_narrative - V2.md", "file_type": "text/markdown", "file_size": 5880, "creation_date": "2025-05-25", "last_modified_date": "2025-05-25"}}, "7784efa6-5b04-4cf3-ab35-287df898878c": {"node_ids": ["c78da157-0299-48a3-9c99-07845900eaad", "1a3a8ce9-dab9-4d6f-8209-183c5400aa13"], "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 5897, "creation_date": "2025-05-28", "last_modified_date": "2025-05-27"}}, "2630808a-be11-43fd-a0b5-66b39b0b16b0": {"node_ids": ["11fad774-47c4-4dfb-ad53-ff34d17b07f2"], "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 1958, "creation_date": "2025-06-03", "last_modified_date": "2025-06-03"}}, "8e3f1a75-f88f-48f0-9eeb-0360b5924045": {"node_ids": ["fe07b8a0-5959-4a4c-9d28-412e48645ee7"], "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/primitives_reference.md", "file_name": "primitives_reference.md", "file_type": "text/markdown", "file_size": 2909, "creation_date": "2025-06-04", "last_modified_date": "2025-06-04"}}, "2fbfa64e-6d4a-49b4-b349-b69cd2d267a2": {"node_ids": ["e60f15fc-1180-4177-930a-fd589718c548"], "metadata": {"file_path": "knowledge/system_reference/GAIA_Function_Map/gaia_rescue_shell_functional_narrative.md", "file_name": "gaia_rescue_shell_functional_narrative.md", "file_type": "text/markdown", "file_size": 3623, "creation_date": "2025-06-08", "last_modified_date": "2025-06-08"}}}}